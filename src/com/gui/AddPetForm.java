/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gui;

import com.bus.BreedBUS;
import com.bus.PetOnStoreBUS;
import com.bus.SupplierTempBUS;
import com.dao.PetOnStoreDTO;
import com.dao.SupplierDTO;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author DUC PHU
 */
public class AddPetForm extends javax.swing.JFrame {

    /**
     * Creates new form AddPetForm
     */
    
    ProductUI ui;
    BreedBUS breed = new BreedBUS();
    SupplierTempBUS supplier = new SupplierTempBUS();
    private String imageUrl = "null";
    private JFileChooser fileChooser = new JFileChooser();
    private File selectedFile;
    private String imagePath;
    private Long importPrice;
    private Long soldPrice;
    Validator valid = new Validator();

    public AddPetForm(ProductUI ui) {
        this.ui = ui;
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfImportPrice = new javax.swing.JTextField();
        tfSoldPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfBreed = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnChoseBreed = new javax.swing.JButton();
        cbbSupplier = new javax.swing.JComboBox<>();
        cbbGender = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        tfWeight = new javax.swing.JTextField();
        tfColor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfDescription = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbImage = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnAddImage = new javax.swing.JButton();
        btnDeleteImage = new javax.swing.JButton();
        btnAddSoldPrice = new javax.swing.JButton();
        btnAddImportPrice = new javax.swing.JButton();
        lbWeightWarn = new javax.swing.JLabel();
        lbNameWarn = new javax.swing.JLabel();
        lbImportPriceWarn = new javax.swing.JLabel();
        lbSoldPriceWarn = new javax.swing.JLabel();
        lbBreedWarn = new javax.swing.JLabel();
        lbColorWarn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thêm Thú cưng mới");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Tên");

        tfName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNameFocusLost(evt);
            }
        });
        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Bên cung cấp");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Giá nhập");

        tfImportPrice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        tfSoldPrice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Giá bán");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Giới Tính");

        tfBreed.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Giống Loài");

        btnChoseBreed.setText("...");
        btnChoseBreed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoseBreedActionPerformed(evt);
            }
        });

        cbbSupplier.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cbbGender.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đực", "Cái" }));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Cân Nặng");

        tfWeight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfWeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfWeightFocusLost(evt);
            }
        });

        tfColor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Màu lông");

        tfDescription.setColumns(20);
        tfDescription.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfDescription.setRows(5);
        jScrollPane1.setViewportView(tfDescription);
        tfDescription.setWrapStyleWord(true);
        tfDescription.setLineWrap(true);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Thông tin mô tả");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Thêm ảnh :");

        lbImage.setBackground(new java.awt.Color(255, 255, 255));
        lbImage.setOpaque(true);

        btnAdd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAdd.setText("Xác nhận");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnAddImage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAddImage.setText("Chọn");
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        btnDeleteImage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDeleteImage.setText("Xóa ảnh");
        btnDeleteImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteImageActionPerformed(evt);
            }
        });

        btnAddSoldPrice.setText("+");
        btnAddSoldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSoldPriceActionPerformed(evt);
            }
        });

        btnAddImportPrice.setText("+");
        btnAddImportPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImportPriceActionPerformed(evt);
            }
        });

        lbWeightWarn.setForeground(new java.awt.Color(255, 102, 102));

        lbNameWarn.setForeground(new java.awt.Color(255, 102, 102));

        lbImportPriceWarn.setForeground(new java.awt.Color(255, 102, 102));

        lbSoldPriceWarn.setForeground(new java.awt.Color(255, 102, 102));

        lbBreedWarn.setForeground(new java.awt.Color(255, 102, 102));

        lbColorWarn.setForeground(new java.awt.Color(255, 102, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(538, 538, 538)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddSoldPrice))
                                .addComponent(tfSoldPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddImportPrice))
                                .addComponent(tfImportPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfBreed, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChoseBreed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfColor, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnAddImage)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDeleteImage))
                                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(159, 159, 159))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSoldPriceWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbImportPriceWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNameWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbBreedWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(284, 284, 284))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbWeightWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbColorWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(284, 284, 284))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(lbNameWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(btnAddImportPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfImportPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(lbImportPriceWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(btnAddSoldPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSoldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfBreed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChoseBreed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbSoldPriceWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBreedWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfColor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbWeightWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbColorWarn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnAddImage)
                    .addComponent(btnDeleteImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        loadSupplierList();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed
        // TODO add your handling code here:
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            // Lấy đường dẫn của tệp hình ảnh được chọn
            selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            
            // Thực hiện các bước tiếp theo ở đây
            
            imageUrl = selectedFile.getName()+"";
            ImageIcon imageIcon = new ImageIcon("" +imagePath);
            Image image = imageIcon.getImage();
            int labelWidth = lbImage.getWidth();
            int labelHeight = lbImage.getHeight();
            Image newImage = image.getScaledInstance(labelWidth, labelHeight, Image.SCALE_SMOOTH);
            ImageIcon newImageIcon = new ImageIcon(newImage);
            lbImage.setIcon(newImageIcon);
        }
    }//GEN-LAST:event_btnAddImageActionPerformed

    private void btnChoseBreedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoseBreedActionPerformed
        // TODO add your handling code here:
        String flag = "add";
        BreedChooser breedChose = new BreedChooser(breed, this, flag);
        breedChose.setVisible(true);
    }//GEN-LAST:event_btnChoseBreedActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(validInput())
        {
            PetOnStoreDTO pet = new PetOnStoreDTO();
            PetOnStoreBUS petBus = new PetOnStoreBUS();
            String id = petBus.generateID();
            if(imageUrl.equals("null"))
            {
                pet.setImageUrl(imageUrl);
            }
            else{
                pet.setImageUrl(imageUrl);
                File sourceImageFile = new File(imagePath);
                File destinationImageFile = new File("src/com/image/" + selectedFile.getName());
                try {
                    Files.copy(sourceImageFile.toPath(), destinationImageFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            pet.setId(id);
            pet.setName(tfName.getText()+"");
            importPrice = valid.convertStringToLong(tfImportPrice.getText());
            pet.setImportPrice(importPrice);
            soldPrice = valid.convertStringToLong(tfSoldPrice.getText());
            pet.setSoldPrice(soldPrice);
            pet.setDescription(tfDescription.getText()+"");

            String supID = supplier.getID(cbbSupplier.getSelectedItem().toString());
            pet.setSupplierId(supID);
            pet.setGender(cbbGender.getSelectedItem().toString());

            String breedID = breed.getID(tfBreed.getText()+"");
            pet.setBreedId(breedID);

            pet.setColor(tfColor.getText()+"");
            pet.setWeight(Integer.parseInt(tfWeight.getText()));
            
//            
//            System.out.println("id : "+pet.getId());
//            System.out.println("name : "+pet.getName());
//            System.out.println("soldPrice: "+pet.getSoldPrice());
//            System.out.println("importPrice: "+pet.getImportPrice());
//            System.out.println("Des "+ pet.getDescription());
//            System.out.println("sup :"+pet.getSupplierId());
//            System.out.println("gender : "+pet.getGender());
//            System.out.println("bre : "+pet.getBreedId());
//            System.out.println("weight : "+pet.getWeight());
//            System.out.println("color : "+pet.getColor());
//            System.out.println("image : "+pet.getImageUrl());
            
            //chỉnh lại 
            petBus.add(pet);
            ui.refreshTable();
            JOptionPane.showMessageDialog(null, "thêm thú cưng thành công");
            this.dispose();
        }
        else{
            //cân nặng
            if(!valid.isNumeric(tfWeight.getText()))
            {
                lbWeightWarn.setText("Vui lòng nhập đúng dữ liệu");
            }
            else{
                lbWeightWarn.setText("");
            }
            
            //name
            if(tfName.getText().isEmpty())
            {
                lbNameWarn.setText("Vui lòng nhập tên cho thú cưng");
            }
            else{
                lbNameWarn.setText("");
            }
            
            //importPrice
            if(tfImportPrice.getText().isEmpty())
            {
                lbImportPriceWarn.setText("Vui lòng nhập giá nhập");
            }
            else{
                lbImportPriceWarn.setText("");
            }
            
            //soldPrice
            if(tfSoldPrice.getText().isEmpty())
            {
                lbSoldPriceWarn.setText("Vui lòng nhập giá bán");
            }
            else{
                lbSoldPriceWarn.setText("");
            }
            
            //breed
            if(tfBreed.getText().isEmpty())
            {
                lbBreedWarn.setText("Vui lòng chọn giống loài của thú");
            }
            else{
                lbBreedWarn.setText("");
            }
            
            //color
            if(tfColor.getText().isEmpty())
            {
                lbColorWarn.setText("Vui lòng nhập màu lông");
            }
            else{
                lbColorWarn.setText("");
            }
            
            JOptionPane.showMessageDialog(null, "dữ liệu trong form chưa đủ hoặc chưa chính xác");
        }
        
        //--------------------------------------
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteImageActionPerformed
        // TODO add your handling code here:
        
            imageUrl = "null";
            lbImage.setIcon(null);
        
    }//GEN-LAST:event_btnDeleteImageActionPerformed

    private void btnAddImportPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImportPriceActionPerformed
        // TODO add your handling code here:
        PriceInput input = new PriceInput(tfImportPrice);
        input.setVisible(true);
    }//GEN-LAST:event_btnAddImportPriceActionPerformed

    private void btnAddSoldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSoldPriceActionPerformed
        // TODO add your handling code here:
        PriceInput input = new PriceInput(tfSoldPrice);
        input.setVisible(true);
    }//GEN-LAST:event_btnAddSoldPriceActionPerformed

    private void tfNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNameFocusLost
        // TODO add your handling code here:
        if(tfName.getText().isEmpty())
        {
            lbNameWarn.setText("Vui lòng nhập tên cho thú cưng");
        }
    }//GEN-LAST:event_tfNameFocusLost

    private void tfWeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfWeightFocusLost
        // TODO add your handling code here:
        if(!valid.isNumeric(tfWeight.getText()))
        {
            lbWeightWarn.setText("Vui lòng nhập đúng dữ liệu");
        }
    }//GEN-LAST:event_tfWeightFocusLost

    private void tfNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyPressed
        // TODO add your handling code here:
        lbNameWarn.setText("");
    }//GEN-LAST:event_tfNameKeyPressed

    public void setBreed(String text)
    {
        tfBreed.setText(""+text);
    }
    
    private void loadSupplierList()
    {
        for(SupplierDTO sup : supplier.supList)
        {
            cbbSupplier.addItem(sup.getName());
        }
    }
    
    boolean validInput()
    {
        boolean isValid;
        if(tfName.getText().isEmpty() || 
                !valid.isNumeric(tfWeight.getText()) || 
                tfSoldPrice.getText().isEmpty() || 
                tfImportPrice.getText().isEmpty() ||
                tfColor.getText().isEmpty())
        {
            isValid = false;
        }
        else{
            isValid = true;
        }
        return isValid;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddPetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddPetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddPetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddPetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddPetForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnAddImportPrice;
    private javax.swing.JButton btnAddSoldPrice;
    private javax.swing.JButton btnChoseBreed;
    private javax.swing.JButton btnDeleteImage;
    private javax.swing.JComboBox<String> cbbGender;
    private javax.swing.JComboBox<String> cbbSupplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBreedWarn;
    private javax.swing.JLabel lbColorWarn;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbImportPriceWarn;
    private javax.swing.JLabel lbNameWarn;
    private javax.swing.JLabel lbSoldPriceWarn;
    private javax.swing.JLabel lbWeightWarn;
    private javax.swing.JTextField tfBreed;
    private javax.swing.JTextField tfColor;
    private javax.swing.JTextArea tfDescription;
    private javax.swing.JTextField tfImportPrice;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSoldPrice;
    private javax.swing.JTextField tfWeight;
    // End of variables declaration//GEN-END:variables
}
